{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst GET_USERS = gql`\n  query($search: String, $sort: [UserSort], $perPage: Int, $page: Int) {\n    Page(perPage: $perPage, page: $page) {\n      users(search: $search, sort: $sort) {\n        id\n        name\n      }\n      pageInfo {\n        total\n        currentPage\n        lastPage\n        hasNextPage\n        perPage\n      }\n    }\n  }\n`;\n\nconst SampleSearch = () => {\n  const [page, setCurrentPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n\n  const nextPage = React.useCallback(() => {\n    setCurrentPage((p) => p + 1);\n  }, []);\n\n  const prevPage = React.useCallback(() => {\n    setCurrentPage((p) => p - 1);\n  }, []);\n\n  const handleChange = React.useCallback((e) => setSearch(e.target.value), []);\n\n  const { loading, data } = useQuery(GET_USERS, {\n    variables: {\n      search,\n      sort: \"USERNAME_DESC\",\n      page,\n      perPage: 20,\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <div style={{ marginBottom: \"20px\" }}>\n        <span style={{ paddingRight: \"10px\" }}>Search user</span>\n        <input type=\"text\" value={search} onChange={handleChange} />\n        <button onClick={() => prevPage()} disabled={page <= 1 || loading}>\n          prev\n        </button>\n        <button\n          onClick={() => nextPage()}\n          disabled={!data?.Page?.pageInfo.hasNextPage || loading}\n        >\n          next\n        </button>\n      </div>\n      {loading ? (\n        \"Loading...\"\n      ) : (\n        <div>\n          {data?.Page?.users.map((user) => {\n            return (\n              <div key={user.id}>\n                {user.id}: {user.name}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SampleSearch;\n"],"names":["GET_USERS","gql","useState","page","setCurrentPage","search","setSearch","nextPage","React","useCallback","p","prevPage","handleChange","e","target","value","useQuery","variables","sort","perPage","loading","data","Fragment","style","marginBottom","paddingRight","type","onChange","onClick","disabled","Page","_data$Page","pageInfo","hasNextPage","_data$Page2","users","map","user","key","id","name"],"mappings":"ogDAGA,IAAMA,EAAYC,sBAkBG,uBACYC,EAAS,MAAjCC,OAAMC,WACeF,EAAS,OAA9BG,OAAQC,OAETC,EAAWC,EAAMC,aAAY,WACjCL,GAAe,SAACM,UAAMA,EAAI,OACzB,IAEGC,EAAWH,EAAMC,aAAY,WACjCL,GAAe,SAACM,UAAMA,EAAI,OACzB,IAEGE,EAAeJ,EAAMC,aAAY,SAACI,UAAMP,EAAUO,EAAEC,OAAOC,SAAQ,MAE/CC,EAAShB,EAAW,CAC5CiB,UAAW,CACTZ,OAAAA,EACAa,KAAM,gBACNf,KAAAA,EACAgB,QAAS,MALLC,IAAAA,QAASC,IAAAA,YAUfb,gBAACA,EAAMc,cACLd,uBAAKe,MAAO,CAAEC,aAAc,SAC1BhB,wBAAMe,MAAO,CAAEE,aAAc,wBAC7BjB,yBAAOkB,KAAK,OAAOX,MAAOV,EAAQsB,SAAUf,IAC5CJ,0BAAQoB,QAAS,kBAAMjB,KAAYkB,SAAU1B,GAAQ,GAAKiB,WAG1DZ,0BACEoB,QAAS,kBAAMrB,KACfsB,WAAWR,MAAAA,aAAAA,EAAMS,mBAANC,EAAYC,SAASC,cAAeb,YAKlDA,EACC,aAEAZ,2BACGa,MAAAA,aAAAA,EAAMS,yBAANI,EAAYC,MAAMC,KAAI,SAACC,UAEpB7B,uBAAK8B,IAAKD,EAAKE,IACZF,EAAKE,QAAMF,EAAKG"}