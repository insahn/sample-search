{"version":3,"file":"index.esm.js","sources":["../src/components/App.js","../src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_USERS = gql`\r\n  query($search: String, $sort: [UserSort], $perPage: Int, $page: Int) {\r\n    Page(perPage: $perPage, page: $page) {\r\n      users(search: $search, sort: $sort) {\r\n        id\r\n        name\r\n      }\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [page, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const nextPage = React.useCallback(() => {\r\n    setCurrentPage((p) => p + 1);\r\n  }, []);\r\n\r\n  const prevPage = React.useCallback(() => {\r\n    setCurrentPage((p) => p - 1);\r\n  }, []);\r\n\r\n  const handleChange = React.useCallback((e) => setSearch(e.target.value), []);\r\n\r\n  const { loading, data } = useQuery(GET_USERS, {\r\n    variables: {\r\n      search,\r\n      sort: \"USERNAME_DESC\",\r\n      page,\r\n      perPage: 20,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <span style={{ paddingRight: \"10px\" }}>Search user</span>\r\n        <input type=\"text\" value={search} onChange={handleChange} />\r\n        <button onClick={() => prevPage()} disabled={page <= 1 || loading}>\r\n          prev\r\n        </button>\r\n        <button\r\n          onClick={() => nextPage()}\r\n          disabled={!data?.Page?.pageInfo.hasNextPage || loading}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n      {loading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <div>\r\n          {data?.Page?.users.map((user) => {\r\n            return (\r\n              <div key={user.id}>\r\n                {user.id}: {user.name}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport React from \"react\";\nimport App from \"./components/App\";\n\nconst client = new ApolloClient({\n  uri: \"https://graphql.anilist.co\",\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n\nexport const SampleSearch = () => {\n  return (\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  );\n};\n"],"names":["GET_USERS","gql","App","useState","page","setCurrentPage","search","setSearch","nextPage","React","useCallback","p","prevPage","handleChange","e","target","value","useQuery","variables","sort","perPage","loading","data","marginBottom","paddingRight","Page","pageInfo","hasNextPage","users","map","user","id","name","client","ApolloClient","uri","cache","InMemoryCache","addTypename","SampleSearch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,SAAS,GAAGC,GAAH,mBAAf;;AAkBA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,kBACeC,QAAQ,CAAC,CAAD,CADvB;AAAA;AAAA,MACTC,IADS;AAAA,MACHC,cADG;;AAAA,mBAEYF,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,MAETG,MAFS;AAAA,MAEDC,SAFC;;AAIhB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,WAAN,CAAkB,YAAM;AACvCL,IAAAA,cAAc,CAAC,UAACM,CAAD;AAAA,aAAOA,CAAC,GAAG,CAAX;AAAA,KAAD,CAAd;AACD,GAFgB,EAEd,EAFc,CAAjB;AAIA,MAAMC,QAAQ,GAAGH,KAAK,CAACC,WAAN,CAAkB,YAAM;AACvCL,IAAAA,cAAc,CAAC,UAACM,CAAD;AAAA,aAAOA,CAAC,GAAG,CAAX;AAAA,KAAD,CAAd;AACD,GAFgB,EAEd,EAFc,CAAjB;AAIA,MAAME,YAAY,GAAGJ,KAAK,CAACC,WAAN,CAAkB,UAACI,CAAD;AAAA,WAAOP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA,GAAlB,EAAoD,EAApD,CAArB;;AAZgB,kBAcUC,QAAQ,CAACjB,SAAD,EAAY;AAC5CkB,IAAAA,SAAS,EAAE;AACTZ,MAAAA,MAAM,EAANA,MADS;AAETa,MAAAA,IAAI,EAAE,eAFG;AAGTf,MAAAA,IAAI,EAAJA,IAHS;AAITgB,MAAAA,OAAO,EAAE;AAJA;AADiC,GAAZ,CAdlB;AAAA,MAcRC,OAdQ,aAcRA,OAdQ;AAAA,MAcCC,IAdD,aAcCA,IAdD;;AAuBhB,sBACE,oBAAC,KAAD,CAAO,QAAP,qBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAZ,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAAb,mBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAElB,MAA1B;AAAkC,IAAA,QAAQ,EAAEO;AAA5C,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,EAAd;AAAA,KAAjB;AAAmC,IAAA,QAAQ,EAAER,IAAI,IAAI,CAAR,IAAaiB;AAA1D,YAHF,eAME;AACE,IAAA,OAAO,EAAE;AAAA,aAAMb,QAAQ,EAAd;AAAA,KADX;AAEE,IAAA,QAAQ,EAAE,EAACc,IAAD,aAACA,IAAD,6BAACA,IAAI,CAAEG,IAAP,uCAAC,WAAYC,QAAZ,CAAqBC,WAAtB,KAAqCN;AAFjD,YANF,CADF,EAcGA,OAAO,GACN,YADM,gBAGN,iCACGC,IADH,aACGA,IADH,sCACGA,IAAI,CAAEG,IADT,gDACG,YAAYG,KAAZ,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAU;AAC/B,wBACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAf,OACGD,IAAI,CAACC,EADR,QACcD,IAAI,CAACE,IADnB,CADF;AAKD,GANA,CADH,CAjBJ,CADF;AA8BD,CArDD;;ACjBA,IAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAiB;AAC9BC,EAAAA,GAAG,EAAE,4BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIC,aAAJ,CAAkB;AACvBC,IAAAA,WAAW,EAAE;AADU,GAAlB;AAFuB,CAAjB,CAAf;IAOaC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN;AAAxB,kBACE,oBAAC,GAAD,OADF,CADF;AAKD;;;;"}